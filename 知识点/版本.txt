Android(8.0)  O === 26
Android(8.1)  O === 27
Android(9.0)  P === 28
Android(10.0) Q === 29


Android(11.0) R === 30
1.全屏通知
    @！在Manifest添加USE_FULL_SCREEN_INTENT 权限
    @！Notification.Builder.setFullScreenIntent 发送全屏Intent


Android(12.0) S === 31
1.闹钟权限
    android12之前可以使用setAlarmClock()、setExact()、setExactAndAllowWhileIdle() 等方法设置精确闹钟时间
    @！引入新权限 SCHEDULE_EXACT_ALARM，调用setAlarmClock()、setExact()、setExactAndAllowWhileIdle()等
Android(12L)  S === 32


Android(13.0) T === 33


Android(14.0) U === 34
1.冻结缓存应用，增强杀进程能力
    可用能力：前台服务、JosScheduler、WorkManager
    停止能力：无法通过互相拉去进程的方式，不断fork子进程

2.应用启动更快
    增加了缓存应用的最大缓存限制

3.减少内存占用
    ART将代码减少

4.屏幕截图检查
    @！在Manifest添加DELETE_SCREEN_CAPTURE 权限
    @！在onStart() 注册 registerScreenCaptureCallback(mainExecutor,screenCallback)
    @! 在onStop()取消注册 unregisterScreenCaptureCallback(screenCallback)
    如果不想应用被系统截图，当前Window窗口加上WindowManager.LayoutParams.FLAG_SECURE标记。

5.显示全屏系统通知
    android14之前可通过在Manifest添加USE_FULL_SCREEN_INTENT 权限，并Notification.Builder.setFullScreenIntent 发送全屏Intent
    @！Google Play商店撤销USER_FULL_SCREEN_INTENT 权限
    @！检查应用是否具有权限：NotificationManager.canUseFullScreenIntent()
    @! 手动开启，跳转到设置页面：Intent(ACTION_MANAGER_APP_USE_FULL_SCREEN_INTENT)

6.精确闹钟权限
    android12之前可以使用setAlarmClock()、setExact()、setExactAndAllowWhileIdle() 等方法设置精确闹钟时间
    android12-13 引入新权限 SCHEDULE_EXACT_ALARM，调用setAlarmClock()、setExact()、setExactAndAllowWhileIdle()等
    @！撤销SCHEDULE_EXACT_ALARM权限，通过跳转设置页面Intent(ACTION_REQUEST_SCHEDULE_EXACT_ALARM)
    @! 判断是否有设置闹钟能力 alarmManager.canScheduleExactAlarms()->{ alarmManager.setExact(...) }

7.照片和视频部分访问权限
    android13权限READ_MEDIA_IMAGE、READ_MEDIA_VIDEO
    @！新权限 READ_MEDIA_VISUAL_USER_SELECTED

8.最小targetSdkVersion限制
    android14将无法安装targetVersion<=23 (android6.0)

    android开发中比较重要的版本号：
    compileSdkVersion:编译当前项目用到的系统版本
    targetSdkVersion:app已经适配好的系统版本，系统会根据这个版本号，来决定是否使用新的特性

9.返回手势
    增加APP中创建过度动画功能
    @！OnBackPressedCallback接口中添加方法hanleOnBackPressed()、handleOnBackCancelled()、handleOnBackProgressed(),可以在这个方法中增加一些过度动画

10.API废弃
    @! overidePendingTransition废弃
    @！使用overrideActivityTransition()

11.前台服务
    @！targetSdkVersion升级到34调用startForeground方法，需要进行适配，说明前台服务的用途

13.registerReceiver需要指定导出行为
    @！动态注册广播时可指出是否export

14.动态代码加载
    targetSdkVersion升级到34动态加载文件（jar、dex、apk格式）需设置成可读的，防止应用被入侵
    @！File jar = new File("xxx.jar");
    try(FileOutputStream os = new FileOutputStream(jar)){
        jar.setReadyOnly();
    }catch(IOException e) {

    }





